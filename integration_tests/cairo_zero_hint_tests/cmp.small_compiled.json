{
    "attributes": [],
    "builtins": [
        "range_check"
    ],
    "compiler_version": "0.13.1",
    "data": [
        "0x40780017fff7fff",
        "0x1",
        "0x1104800180018000",
        "0x1ce",
        "0x10780017fff7fff",
        "0x0",
        "0x208b7fff7fff7ffe",
        "0x1104800180018000",
        "0x800000000000011000000000000000000000000000000000000000000000000",
        "0x482480017ffe8000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff",
        "0x208b7fff7fff7ffe",
        "0x40780017fff7fff",
        "0x1",
        "0x208b7fff7fff7ffe",
        "0x400380007ffc7ffd",
        "0x482680017ffc8000",
        "0x1",
        "0x208b7fff7fff7ffe",
        "0x480a7ffb7fff8000",
        "0x48297ffc80007ffd",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
        "0x208b7fff7fff7ffe",
        "0x480280007ffb8000",
        "0x480280017ffb8000",
        "0x484480017fff8000",
        "0x2aaaaaaaaaaaab05555555555555556",
        "0x48307fff7ffd8000",
        "0x480280027ffb8000",
        "0x480280037ffb8000",
        "0x484480017fff8000",
        "0x4000000000000088000000000000001",
        "0x48307fff7ffd8000",
        "0xa0680017fff8000",
        "0xe",
        "0x480680017fff8000",
        "0x800000000000011000000000000000000000000000000000000000000000000",
        "0x48287ffc80007fff",
        "0x40307ffc7ff87fff",
        "0x48297ffd80007ffc",
        "0x482680017ffd8000",
        "0x1",
        "0x48507fff7ffe8000",
        "0x40507ff97ff57fff",
        "0x482680017ffb8000",
        "0x4",
        "0x208b7fff7fff7ffe",
        "0xa0680017fff8000",
        "0xc",
        "0x480680017fff8000",
        "0x800000000000011000000000000000000000000000000000000000000000000",
        "0x48287ffd80007fff",
        "0x48327fff7ffc8000",
        "0x40307ffa7ff67fff",
        "0x48527ffe7ffc8000",
        "0x40507ff97ff57fff",
        "0x482680017ffb8000",
        "0x4",
        "0x208b7fff7fff7ffe",
        "0x40317ffd7ff97ffd",
        "0x48297ffc80007ffd",
        "0x48527fff7ffc8000",
        "0x40507ffb7ff77fff",
        "0x40780017fff7fff",
        "0x2",
        "0x482680017ffb8000",
        "0x4",
        "0x208b7fff7fff7ffe",
        "0x48297ffd80007ffc",
        "0x20680017fff7fff",
        "0x4",
        "0x402780017ffc7ffc",
        "0x1",
        "0x480a7ffb7fff8000",
        "0x480a7ffc7fff8000",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcc",
        "0x208b7fff7fff7ffe",
        "0x20780017fff7ffd",
        "0x6",
        "0x480a7ffb7fff8000",
        "0x480680017fff8000",
        "0x1",
        "0x208b7fff7fff7ffe",
        "0x480780017fff8000",
        "0x1",
        "0x480b7ffc7fff8001",
        "0x480b7ffd7fff8002",
        "0x48507ffe7ffe8003",
        "0xa0680017fff7fff",
        "0x7",
        "0x484480017ffd8002",
        "0x400000000000008800000000000000000000000000000000000000000000001",
        "0x48127ffa7fff7fff",
        "0x90780017fff7fff",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
        "0x402480017ffd7fff",
        "0x800000000000011000000000000000000000000000000000000000000000000",
        "0x484480017fff8002",
        "0x400000000000008800000000000000000000000000000000000000000000001",
        "0x48507ffb7ffa7fff",
        "0xa0680017fff8000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff4",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9f",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9c",
        "0x482480017ffe8000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffff",
        "0x48307fff80007ffc",
        "0x484480017fff8000",
        "0x666666666666674000000000000000000000000000000000000000000000001",
        "0x480a7ffb7fff8000",
        "0x482480017ffe8000",
        "0x800000000000011000000000000000000000000000000000000000000000000",
        "0x480680017fff8000",
        "0xfb",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9d",
        "0x48127fe97fff8000",
        "0x208b7fff7fff7ffe",
        "0x20780017fff7ffd",
        "0x5",
        "0x480680017fff8000",
        "0x0",
        "0x208b7fff7fff7ffe",
        "0x480680017fff8000",
        "0x1",
        "0x208b7fff7fff7ffe",
        "0xa0680017fff8000",
        "0xa",
        "0x400380007ffc7ffd",
        "0x40780017fff7fff",
        "0x14",
        "0x482680017ffc8000",
        "0x1",
        "0x480680017fff8000",
        "0x1",
        "0x208b7fff7fff7ffe",
        "0xa0680017fff8000",
        "0xe",
        "0x484680017ffd8000",
        "0x800000000000011000000000000000000000000000000000000000000000000",
        "0x482480017fff8000",
        "0x800000000000011000000000000000000000000000000000000000000000000",
        "0x400280007ffc7fff",
        "0x40780017fff7fff",
        "0x11",
        "0x482680017ffc8000",
        "0x1",
        "0x480680017fff8000",
        "0x0",
        "0x208b7fff7fff7ffe",
        "0x480a7ffc7fff8000",
        "0x480680017fff8000",
        "0x100000000000000000000000000000000",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7a",
        "0x480680017fff8000",
        "0x0",
        "0x208b7fff7fff7ffe",
        "0x480a7ffb7fff8000",
        "0x48297ffc80007ffd",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
        "0x208b7fff7fff7ffe",
        "0x480a7ffb7fff8000",
        "0x480a7ffc7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd9",
        "0x20680017fff7fff",
        "0x7",
        "0x40780017fff7fff",
        "0x19",
        "0x48127fe57fff8000",
        "0x48127fe57fff8000",
        "0x208b7fff7fff7ffe",
        "0x48127ffe7fff8000",
        "0x48297ffc80007ffd",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffce",
        "0x208b7fff7fff7ffe",
        "0x480a7ffa7fff8000",
        "0x480a7ffc7fff8000",
        "0x480a7ffb7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
        "0x20680017fff7fff",
        "0x7",
        "0x40780017fff7fff",
        "0x1a",
        "0x48127fe47fff8000",
        "0x48127fe47fff8000",
        "0x208b7fff7fff7ffe",
        "0x482680017ffd8000",
        "0x800000000000011000000000000000000000000000000000000000000000000",
        "0x48127ffd7fff8000",
        "0x48287ffb80007ffe",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbb",
        "0x208b7fff7fff7ffe",
        "0xa0680017fff8000",
        "0xc",
        "0x40780017fff7fff",
        "0x6",
        "0x480a7ffb7fff8000",
        "0x480a7ffc7fff8000",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff46",
        "0x480680017fff8000",
        "0x1",
        "0x208b7fff7fff7ffe",
        "0x480a7ffb7fff8000",
        "0x480a7ffd7fff8000",
        "0x480a7ffc7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff6b",
        "0x480680017fff8000",
        "0x0",
        "0x208b7fff7fff7ffe",
        "0x48297ffd80007ffc",
        "0x20680017fff7fff",
        "0x4",
        "0x480a7ff77fff8000",
        "0x208b7fff7fff7ffe",
        "0x480a7ff77fff8000",
        "0x482a7ffa7ff98000",
        "0x480a7ffb7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff69",
        "0x482a7ffc7ff88000",
        "0x400080007fff7ffe",
        "0x48127ffd7fff8000",
        "0x480a7ff87fff8000",
        "0x482a7ffa7ff98000",
        "0x480a7ffa7fff8000",
        "0x480a7ffb7fff8000",
        "0x482680017ffc8000",
        "0x1",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
        "0x208b7fff7fff7ffe",
        "0x48297ffd80007ffc",
        "0x20680017fff7fff",
        "0x4",
        "0x480a7ff97fff8000",
        "0x208b7fff7fff7ffe",
        "0x482a7ffc7ffa8000",
        "0x480080007fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7e",
        "0x482a7ffc7ffb8000",
        "0x400080007fff7ffe",
        "0x480a7ff97fff8000",
        "0x480a7ffa7fff8000",
        "0x480a7ffb7fff8000",
        "0x482680017ffc8000",
        "0x1",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
        "0x208b7fff7fff7ffe",
        "0x48297ffd80007ffc",
        "0x20680017fff7fff",
        "0x4",
        "0x480a7ff97fff8000",
        "0x208b7fff7fff7ffe",
        "0x482a7ffc7ffa8000",
        "0x480a7ff97fff8000",
        "0x480080007ffe8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff71",
        "0x482a7ffc7ffb8000",
        "0x400080007fff7ffe",
        "0x48127ffd7fff8000",
        "0x480a7ffa7fff8000",
        "0x480a7ffb7fff8000",
        "0x482680017ffc8000",
        "0x1",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffef",
        "0x208b7fff7fff7ffe",
        "0x48297ffd80007ffc",
        "0x20680017fff7fff",
        "0x4",
        "0x480a7ff97fff8000",
        "0x208b7fff7fff7ffe",
        "0x482a7ffc7ffa8000",
        "0x480a7ff97fff8000",
        "0x480080007ffe8000",
        "0x480680017fff8000",
        "0xe6a9",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff7b",
        "0x482a7ffc7ffb8000",
        "0x400080007fff7ffe",
        "0x48127ffd7fff8000",
        "0x480a7ffa7fff8000",
        "0x480a7ffb7fff8000",
        "0x482680017ffc8000",
        "0x1",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
        "0x208b7fff7fff7ffe",
        "0x48297ffd80007ffc",
        "0x20680017fff7fff",
        "0x4",
        "0x480a7ff97fff8000",
        "0x208b7fff7fff7ffe",
        "0x482a7ffc7ffa8000",
        "0x480a7ff97fff8000",
        "0x480080007ffe8000",
        "0x480680017fff8000",
        "0xe6a9",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff69",
        "0x482a7ffc7ffb8000",
        "0x400080007fff7ffe",
        "0x48127ffd7fff8000",
        "0x480a7ffa7fff8000",
        "0x480a7ffb7fff8000",
        "0x482680017ffc8000",
        "0x1",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
        "0x208b7fff7fff7ffe",
        "0x48297ffd80007ffc",
        "0x20680017fff7fff",
        "0x4",
        "0x480a7ff97fff8000",
        "0x208b7fff7fff7ffe",
        "0x482a7ffc7ffa8000",
        "0x482680017ffc8000",
        "0x1",
        "0x48327fff7ffa8000",
        "0x480a7ff97fff8000",
        "0x480680017fff8000",
        "0xe6a9",
        "0x480080007ffb8000",
        "0x480080007ffc8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5e",
        "0x482a7ffc7ffb8000",
        "0x400080007fff7ffe",
        "0x48127ffd7fff8000",
        "0x480a7ffa7fff8000",
        "0x480a7ffb7fff8000",
        "0x482680017ffc8000",
        "0x1",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe9",
        "0x208b7fff7fff7ffe",
        "0x48297ffd80007ffc",
        "0x20680017fff7fff",
        "0x4",
        "0x480a7ff97fff8000",
        "0x208b7fff7fff7ffe",
        "0x482a7ffc7ffa8000",
        "0x480a7ff97fff8000",
        "0x480080007ffe8000",
        "0x480680017fff8000",
        "0xe6a9",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5a",
        "0x482a7ffc7ffb8000",
        "0x400080007fff7ffe",
        "0x48127ffd7fff8000",
        "0x480a7ffa7fff8000",
        "0x480a7ffb7fff8000",
        "0x482680017ffc8000",
        "0x1",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
        "0x208b7fff7fff7ffe",
        "0x40780017fff7fff",
        "0x1",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe8b",
        "0x40137fff7fff8000",
        "0x480a7ffc7fff8000",
        "0x480a80007fff8000",
        "0x480680017fff8000",
        "0x0",
        "0x480680017fff8000",
        "0x3",
        "0x480680017fff8000",
        "0x3",
        "0x480680017fff8000",
        "0x0",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff51",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe7b",
        "0x48127ffc7fff8000",
        "0x480a80007fff8000",
        "0x48127ffd7fff8000",
        "0x480680017fff8000",
        "0x0",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff5e",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe71",
        "0x48127ffc7fff8000",
        "0x480a80007fff8000",
        "0x48127ffd7fff8000",
        "0x480680017fff8000",
        "0x0",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff68",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe67",
        "0x48127ffc7fff8000",
        "0x480a80007fff8000",
        "0x48127ffd7fff8000",
        "0x480680017fff8000",
        "0x0",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff73",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5d",
        "0x48127ffc7fff8000",
        "0x480a80007fff8000",
        "0x48127ffd7fff8000",
        "0x480680017fff8000",
        "0x0",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff80",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe53",
        "0x48127ffc7fff8000",
        "0x480a80007fff8000",
        "0x48127ffd7fff8000",
        "0x480680017fff8000",
        "0x0",
        "0x482680017ffd8000",
        "0x800000000000011000000000000000000000000000000000000000000000000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8c",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe48",
        "0x48127ffc7fff8000",
        "0x480a80007fff8000",
        "0x48127ffd7fff8000",
        "0x480680017fff8000",
        "0x0",
        "0x480a7ffd7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9d",
        "0x208b7fff7fff7ffe",
        "0x480a7ffd7fff8000",
        "0x480680017fff8000",
        "0xa",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffae",
        "0x208b7fff7fff7ffe"
    ],
    "debug_info": null,
    "hints": {
        "12": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.alloc",
                    "starkware.cairo.common.alloc.alloc"
                ],
                "code": "memory[ap] = segments.add()",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 4,
                        "offset": 0
                    },
                    "reference_ids": {}
                }
            }
        ],
        "15": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_nn"
                ],
                "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 5,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_nn.a": 2,
                        "starkware.cairo.common.math.assert_nn.range_check_ptr": 3
                    }
                }
            }
        ],
        "24": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_le_felt"
                ],
                "code": "import itertools\n\nfrom starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\na = ids.a % PRIME\nb = ids.b % PRIME\nassert a <= b, f'a = {a} is not less than or equal to b = {b}.'\n\n# Find an arc less than PRIME / 3, and another less than PRIME / 2.\nlengths_and_indices = [(a, 0), (b - a, 1), (PRIME - 1 - b, 2)]\nlengths_and_indices.sort()\nassert lengths_and_indices[0][0] <= PRIME // 3 and lengths_and_indices[1][0] <= PRIME // 2\nexcluded = lengths_and_indices[2][1]\n\nmemory[ids.range_check_ptr + 1], memory[ids.range_check_ptr + 0] = (\n    divmod(lengths_and_indices[0][0], ids.PRIME_OVER_3_HIGH))\nmemory[ids.range_check_ptr + 3], memory[ids.range_check_ptr + 2] = (\n    divmod(lengths_and_indices[1][0], ids.PRIME_OVER_2_HIGH))",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_le_felt.a": 9,
                        "starkware.cairo.common.math.assert_le_felt.b": 10,
                        "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 11
                    }
                }
            }
        ],
        "34": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_le_felt"
                ],
                "code": "memory[ap] = 1 if excluded != 0 else 0",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 8
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_le_felt.__temp0": 12,
                        "starkware.cairo.common.math.assert_le_felt.__temp1": 13,
                        "starkware.cairo.common.math.assert_le_felt.__temp2": 14,
                        "starkware.cairo.common.math.assert_le_felt.__temp3": 16,
                        "starkware.cairo.common.math.assert_le_felt.__temp4": 17,
                        "starkware.cairo.common.math.assert_le_felt.__temp5": 18,
                        "starkware.cairo.common.math.assert_le_felt.a": 9,
                        "starkware.cairo.common.math.assert_le_felt.arc_long": 19,
                        "starkware.cairo.common.math.assert_le_felt.arc_prod": 22,
                        "starkware.cairo.common.math.assert_le_felt.arc_short": 15,
                        "starkware.cairo.common.math.assert_le_felt.arc_sum": 21,
                        "starkware.cairo.common.math.assert_le_felt.b": 10,
                        "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 20
                    }
                }
            }
        ],
        "48": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_le_felt"
                ],
                "code": "memory[ap] = 1 if excluded != 1 else 0",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 9
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_le_felt.__temp0": 12,
                        "starkware.cairo.common.math.assert_le_felt.__temp1": 13,
                        "starkware.cairo.common.math.assert_le_felt.__temp2": 14,
                        "starkware.cairo.common.math.assert_le_felt.__temp3": 16,
                        "starkware.cairo.common.math.assert_le_felt.__temp4": 17,
                        "starkware.cairo.common.math.assert_le_felt.__temp5": 18,
                        "starkware.cairo.common.math.assert_le_felt.a": 9,
                        "starkware.cairo.common.math.assert_le_felt.arc_long": 19,
                        "starkware.cairo.common.math.assert_le_felt.arc_prod": 22,
                        "starkware.cairo.common.math.assert_le_felt.arc_short": 15,
                        "starkware.cairo.common.math.assert_le_felt.arc_sum": 21,
                        "starkware.cairo.common.math.assert_le_felt.b": 10,
                        "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 20
                    }
                }
            }
        ],
        "60": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_le_felt"
                ],
                "code": "assert excluded == 2",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 7,
                        "offset": 10
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_le_felt.__temp0": 12,
                        "starkware.cairo.common.math.assert_le_felt.__temp1": 13,
                        "starkware.cairo.common.math.assert_le_felt.__temp2": 14,
                        "starkware.cairo.common.math.assert_le_felt.__temp3": 16,
                        "starkware.cairo.common.math.assert_le_felt.__temp4": 17,
                        "starkware.cairo.common.math.assert_le_felt.__temp5": 18,
                        "starkware.cairo.common.math.assert_le_felt.a": 9,
                        "starkware.cairo.common.math.assert_le_felt.arc_long": 19,
                        "starkware.cairo.common.math.assert_le_felt.arc_prod": 22,
                        "starkware.cairo.common.math.assert_le_felt.arc_short": 15,
                        "starkware.cairo.common.math.assert_le_felt.arc_sum": 21,
                        "starkware.cairo.common.math.assert_le_felt.b": 10,
                        "starkware.cairo.common.math.assert_le_felt.range_check_ptr": 20
                    }
                }
            }
        ],
        "69": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_lt_felt"
                ],
                "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert_integer(ids.b)\nassert (ids.a % PRIME) < (ids.b % PRIME), \\\n    f'a = {ids.a % PRIME} is not less than b = {ids.b % PRIME}.'",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 8,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_lt_felt.a": 34,
                        "starkware.cairo.common.math.assert_lt_felt.b": 35,
                        "starkware.cairo.common.math.assert_lt_felt.range_check_ptr": 36
                    }
                }
            }
        ],
        "91": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.pow",
                    "starkware.cairo.common.pow.pow"
                ],
                "code": "ids.locs.bit = (ids.prev_locs.exp % PRIME) & 1",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 9,
                        "offset": 4
                    },
                    "reference_ids": {
                        "starkware.cairo.common.pow.pow.base": 39,
                        "starkware.cairo.common.pow.pow.exp": 40,
                        "starkware.cairo.common.pow.pow.initial_locs": 42,
                        "starkware.cairo.common.pow.pow.locs": 44,
                        "starkware.cairo.common.pow.pow.prev_locs": 43,
                        "starkware.cairo.common.pow.pow.range_check_ptr": 41
                    }
                }
            }
        ],
        "131": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.math_cmp",
                    "starkware.cairo.common.math_cmp.is_nn"
                ],
                "code": "memory[ap] = 0 if 0 <= (ids.a % PRIME) < range_check_builtin.bound else 1",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 11,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math_cmp.is_nn.a": 53,
                        "starkware.cairo.common.math_cmp.is_nn.range_check_ptr": 54
                    }
                }
            }
        ],
        "141": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.math_cmp",
                    "starkware.cairo.common.math_cmp.is_nn"
                ],
                "code": "memory[ap] = 0 if 0 <= ((-ids.a - 1) % PRIME) < range_check_builtin.bound else 1",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 11,
                        "offset": 1
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math_cmp.is_nn.a": 53,
                        "starkware.cairo.common.math_cmp.is_nn.range_check_ptr": 54
                    }
                }
            }
        ],
        "204": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.math_cmp",
                    "starkware.cairo.common.math_cmp.is_le_felt"
                ],
                "code": "memory[ap] = 0 if (ids.a % PRIME) <= (ids.b % PRIME) else 1",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 15,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math_cmp.is_le_felt.a": 78,
                        "starkware.cairo.common.math_cmp.is_le_felt.b": 79,
                        "starkware.cairo.common.math_cmp.is_le_felt.range_check_ptr": 80
                    }
                }
            }
        ]
    },
    "identifiers": {
        "__main__.CONSTANT": {
            "type": "const",
            "value": 59049
        },
        "__main__.RC_BOUND": {
            "type": "const",
            "value": 340282366920938463463374607431768211456
        },
        "__main__.__end__": {
            "pc": 4,
            "type": "label"
        },
        "__main__.__start__": {
            "pc": 0,
            "type": "label"
        },
        "__main__.alloc": {
            "destination": "starkware.cairo.common.alloc.alloc",
            "type": "alias"
        },
        "__main__.assert_le_felt": {
            "destination": "starkware.cairo.common.math.assert_le_felt",
            "type": "alias"
        },
        "__main__.assert_lt_felt": {
            "destination": "starkware.cairo.common.math.assert_lt_felt",
            "type": "alias"
        },
        "__main__.fill_array_with_pow": {
            "decorators": [],
            "pc": 224,
            "type": "function"
        },
        "__main__.fill_array_with_pow.Args": {
            "full_name": "__main__.fill_array_with_pow.Args",
            "members": {
                "array_start": {
                    "cairo_type": "felt*",
                    "offset": 0
                },
                "base": {
                    "cairo_type": "felt",
                    "offset": 1
                },
                "exp": {
                    "cairo_type": "felt",
                    "offset": 3
                },
                "iter": {
                    "cairo_type": "felt",
                    "offset": 4
                },
                "last": {
                    "cairo_type": "felt",
                    "offset": 5
                },
                "step": {
                    "cairo_type": "felt",
                    "offset": 2
                }
            },
            "size": 6,
            "type": "struct"
        },
        "__main__.fill_array_with_pow.ImplicitArgs": {
            "full_name": "__main__.fill_array_with_pow.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "__main__.fill_array_with_pow.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.fill_array_with_pow.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "__main__.fill_array_with_pow.__temp23": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array_with_pow.__temp23",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 1
                    },
                    "pc": 225,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array_with_pow.__temp24": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array_with_pow.__temp24",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 17,
                        "offset": 1
                    },
                    "pc": 235,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array_with_pow.array_start": {
            "cairo_type": "felt*",
            "full_name": "__main__.fill_array_with_pow.array_start",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 224,
                    "value": "[cast(fp + (-8), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array_with_pow.base": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array_with_pow.base",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 224,
                    "value": "[cast(fp + (-7), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array_with_pow.exp": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array_with_pow.exp",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 224,
                    "value": "[cast(fp + (-5), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array_with_pow.iter": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array_with_pow.iter",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 224,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array_with_pow.last": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array_with_pow.last",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 224,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array_with_pow.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array_with_pow.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 224,
                    "value": "[cast(fp + (-9), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 17,
                        "offset": 0
                    },
                    "pc": 234,
                    "value": "[cast(ap + (-2), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 18,
                        "offset": 0
                    },
                    "pc": 246,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array_with_pow.res": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array_with_pow.res",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 17,
                        "offset": 0
                    },
                    "pc": 234,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array_with_pow.step": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array_with_pow.step",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 16,
                        "offset": 0
                    },
                    "pc": 224,
                    "value": "[cast(fp + (-6), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.is_in_range": {
            "destination": "starkware.cairo.common.math_cmp.is_in_range",
            "type": "alias"
        },
        "__main__.is_le": {
            "destination": "starkware.cairo.common.math_cmp.is_le",
            "type": "alias"
        },
        "__main__.is_le_felt": {
            "destination": "starkware.cairo.common.math_cmp.is_le_felt",
            "type": "alias"
        },
        "__main__.is_nn": {
            "destination": "starkware.cairo.common.math_cmp.is_nn",
            "type": "alias"
        },
        "__main__.is_nn_le": {
            "destination": "starkware.cairo.common.math_cmp.is_nn_le",
            "type": "alias"
        },
        "__main__.is_not_zero": {
            "destination": "starkware.cairo.common.math_cmp.is_not_zero",
            "type": "alias"
        },
        "__main__.main": {
            "decorators": [],
            "pc": 464,
            "type": "function"
        },
        "__main__.main.Args": {
            "full_name": "__main__.main.Args",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "__main__.main.ImplicitArgs": {
            "full_name": "__main__.main.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "__main__.main.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.main.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "__main__.main.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "__main__.main.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 39,
                        "offset": 0
                    },
                    "pc": 464,
                    "value": "[cast(fp + (-3), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 40,
                        "offset": 0
                    },
                    "pc": 469,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.pow": {
            "destination": "starkware.cairo.common.pow.pow",
            "type": "alias"
        },
        "__main__.run_tests": {
            "decorators": [],
            "pc": 384,
            "type": "function"
        },
        "__main__.run_tests.Args": {
            "full_name": "__main__.run_tests.Args",
            "members": {
                "array_len": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "__main__.run_tests.ImplicitArgs": {
            "full_name": "__main__.run_tests.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "__main__.run_tests.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.run_tests.SIZEOF_LOCALS": {
            "type": "const",
            "value": 1
        },
        "__main__.run_tests.array": {
            "cairo_type": "felt*",
            "full_name": "__main__.run_tests.array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 31,
                        "offset": 4
                    },
                    "pc": 388,
                    "value": "[cast(ap + (-1), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 31,
                        "offset": 4
                    },
                    "pc": 389,
                    "value": "[cast(fp, felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.run_tests.array_is_in_range": {
            "cairo_type": "felt*",
            "full_name": "__main__.run_tests.array_is_in_range",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 36,
                        "offset": 3
                    },
                    "pc": 444,
                    "value": "[cast(ap + (-1), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.run_tests.array_is_le": {
            "cairo_type": "felt*",
            "full_name": "__main__.run_tests.array_is_le",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 34,
                        "offset": 3
                    },
                    "pc": 424,
                    "value": "[cast(ap + (-1), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.run_tests.array_is_le_felt": {
            "cairo_type": "felt*",
            "full_name": "__main__.run_tests.array_is_le_felt",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 37,
                        "offset": 3
                    },
                    "pc": 455,
                    "value": "[cast(ap + (-1), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.run_tests.array_is_nn": {
            "cairo_type": "felt*",
            "full_name": "__main__.run_tests.array_is_nn",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 33,
                        "offset": 3
                    },
                    "pc": 414,
                    "value": "[cast(ap + (-1), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.run_tests.array_is_nn_le": {
            "cairo_type": "felt*",
            "full_name": "__main__.run_tests.array_is_nn_le",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 35,
                        "offset": 3
                    },
                    "pc": 434,
                    "value": "[cast(ap + (-1), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.run_tests.array_is_not_zero": {
            "cairo_type": "felt*",
            "full_name": "__main__.run_tests.array_is_not_zero",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 32,
                        "offset": 3
                    },
                    "pc": 404,
                    "value": "[cast(ap + (-1), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.run_tests.array_len": {
            "cairo_type": "felt",
            "full_name": "__main__.run_tests.array_len",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 31,
                        "offset": 0
                    },
                    "pc": 384,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.run_tests.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "__main__.run_tests.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 31,
                        "offset": 0
                    },
                    "pc": 384,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 32,
                        "offset": 0
                    },
                    "pc": 401,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 33,
                        "offset": 0
                    },
                    "pc": 411,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 34,
                        "offset": 0
                    },
                    "pc": 421,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 35,
                        "offset": 0
                    },
                    "pc": 431,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 36,
                        "offset": 0
                    },
                    "pc": 441,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 37,
                        "offset": 0
                    },
                    "pc": 452,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 38,
                        "offset": 0
                    },
                    "pc": 462,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 32,
                        "offset": 0
                    },
                    "pc": 402,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 33,
                        "offset": 0
                    },
                    "pc": 412,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 34,
                        "offset": 0
                    },
                    "pc": 422,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 35,
                        "offset": 0
                    },
                    "pc": 432,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 36,
                        "offset": 0
                    },
                    "pc": 442,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 37,
                        "offset": 0
                    },
                    "pc": 453,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 38,
                        "offset": 0
                    },
                    "pc": 463,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_in_range": {
            "decorators": [],
            "pc": 334,
            "type": "function"
        },
        "__main__.test_is_in_range.Args": {
            "full_name": "__main__.test_is_in_range.Args",
            "members": {
                "base_array": {
                    "cairo_type": "felt*",
                    "offset": 0
                },
                "iter": {
                    "cairo_type": "felt",
                    "offset": 2
                },
                "last": {
                    "cairo_type": "felt",
                    "offset": 3
                },
                "new_array": {
                    "cairo_type": "felt*",
                    "offset": 1
                }
            },
            "size": 4,
            "type": "struct"
        },
        "__main__.test_is_in_range.ImplicitArgs": {
            "full_name": "__main__.test_is_in_range.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "__main__.test_is_in_range.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.test_is_in_range.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "__main__.test_is_in_range.__temp37": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_in_range.__temp37",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 27,
                        "offset": 1
                    },
                    "pc": 335,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_in_range.__temp38": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_in_range.__temp38",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 27,
                        "offset": 2
                    },
                    "pc": 340,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_in_range.__temp39": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_in_range.__temp39",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 27,
                        "offset": 3
                    },
                    "pc": 342,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_in_range.__temp40": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_in_range.__temp40",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 27,
                        "offset": 4
                    },
                    "pc": 343,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_in_range.__temp41": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_in_range.__temp41",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 27,
                        "offset": 71
                    },
                    "pc": 351,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_in_range.base_array": {
            "cairo_type": "felt*",
            "full_name": "__main__.test_is_in_range.base_array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 27,
                        "offset": 0
                    },
                    "pc": 334,
                    "value": "[cast(fp + (-6), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_in_range.iter": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_in_range.iter",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 27,
                        "offset": 0
                    },
                    "pc": 334,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_in_range.last": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_in_range.last",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 27,
                        "offset": 0
                    },
                    "pc": 334,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_in_range.new_array": {
            "cairo_type": "felt*",
            "full_name": "__main__.test_is_in_range.new_array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 27,
                        "offset": 0
                    },
                    "pc": 334,
                    "value": "[cast(fp + (-5), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_in_range.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_in_range.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 27,
                        "offset": 0
                    },
                    "pc": 334,
                    "value": "[cast(fp + (-7), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 27,
                        "offset": 70
                    },
                    "pc": 350,
                    "value": "[cast(ap + (-2), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 28,
                        "offset": 0
                    },
                    "pc": 360,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_in_range.res": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_in_range.res",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 27,
                        "offset": 70
                    },
                    "pc": 350,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le": {
            "decorators": [],
            "pc": 288,
            "type": "function"
        },
        "__main__.test_is_le.Args": {
            "full_name": "__main__.test_is_le.Args",
            "members": {
                "base_array": {
                    "cairo_type": "felt*",
                    "offset": 0
                },
                "iter": {
                    "cairo_type": "felt",
                    "offset": 2
                },
                "last": {
                    "cairo_type": "felt",
                    "offset": 3
                },
                "new_array": {
                    "cairo_type": "felt*",
                    "offset": 1
                }
            },
            "size": 4,
            "type": "struct"
        },
        "__main__.test_is_le.ImplicitArgs": {
            "full_name": "__main__.test_is_le.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "__main__.test_is_le.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.test_is_le.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "__main__.test_is_le.__temp31": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le.__temp31",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 1
                    },
                    "pc": 289,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le.__temp32": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le.__temp32",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 2
                    },
                    "pc": 294,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le.__temp33": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le.__temp33",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 35
                    },
                    "pc": 301,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le.base_array": {
            "cairo_type": "felt*",
            "full_name": "__main__.test_is_le.base_array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 0
                    },
                    "pc": 288,
                    "value": "[cast(fp + (-6), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le.iter": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le.iter",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 0
                    },
                    "pc": 288,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le.last": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le.last",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 0
                    },
                    "pc": 288,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le.new_array": {
            "cairo_type": "felt*",
            "full_name": "__main__.test_is_le.new_array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 0
                    },
                    "pc": 288,
                    "value": "[cast(fp + (-5), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 0
                    },
                    "pc": 288,
                    "value": "[cast(fp + (-7), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 34
                    },
                    "pc": 300,
                    "value": "[cast(ap + (-2), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 24,
                        "offset": 0
                    },
                    "pc": 310,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le.res": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le.res",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 23,
                        "offset": 34
                    },
                    "pc": 300,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le_felt": {
            "decorators": [],
            "pc": 361,
            "type": "function"
        },
        "__main__.test_is_le_felt.Args": {
            "full_name": "__main__.test_is_le_felt.Args",
            "members": {
                "base_array": {
                    "cairo_type": "felt*",
                    "offset": 0
                },
                "iter": {
                    "cairo_type": "felt",
                    "offset": 2
                },
                "last": {
                    "cairo_type": "felt",
                    "offset": 3
                },
                "new_array": {
                    "cairo_type": "felt*",
                    "offset": 1
                }
            },
            "size": 4,
            "type": "struct"
        },
        "__main__.test_is_le_felt.ImplicitArgs": {
            "full_name": "__main__.test_is_le_felt.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "__main__.test_is_le_felt.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.test_is_le_felt.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "__main__.test_is_le_felt.__temp42": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le_felt.__temp42",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 29,
                        "offset": 1
                    },
                    "pc": 362,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le_felt.__temp43": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le_felt.__temp43",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 29,
                        "offset": 2
                    },
                    "pc": 367,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le_felt.__temp44": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le_felt.__temp44",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 29,
                        "offset": 36
                    },
                    "pc": 374,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le_felt.base_array": {
            "cairo_type": "felt*",
            "full_name": "__main__.test_is_le_felt.base_array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 29,
                        "offset": 0
                    },
                    "pc": 361,
                    "value": "[cast(fp + (-6), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le_felt.iter": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le_felt.iter",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 29,
                        "offset": 0
                    },
                    "pc": 361,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le_felt.last": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le_felt.last",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 29,
                        "offset": 0
                    },
                    "pc": 361,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le_felt.new_array": {
            "cairo_type": "felt*",
            "full_name": "__main__.test_is_le_felt.new_array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 29,
                        "offset": 0
                    },
                    "pc": 361,
                    "value": "[cast(fp + (-5), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le_felt.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le_felt.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 29,
                        "offset": 0
                    },
                    "pc": 361,
                    "value": "[cast(fp + (-7), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 29,
                        "offset": 35
                    },
                    "pc": 373,
                    "value": "[cast(ap + (-2), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 30,
                        "offset": 0
                    },
                    "pc": 383,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_le_felt.res": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_le_felt.res",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 29,
                        "offset": 35
                    },
                    "pc": 373,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn": {
            "decorators": [],
            "pc": 267,
            "type": "function"
        },
        "__main__.test_is_nn.Args": {
            "full_name": "__main__.test_is_nn.Args",
            "members": {
                "base_array": {
                    "cairo_type": "felt*",
                    "offset": 0
                },
                "iter": {
                    "cairo_type": "felt",
                    "offset": 2
                },
                "last": {
                    "cairo_type": "felt",
                    "offset": 3
                },
                "new_array": {
                    "cairo_type": "felt*",
                    "offset": 1
                }
            },
            "size": 4,
            "type": "struct"
        },
        "__main__.test_is_nn.ImplicitArgs": {
            "full_name": "__main__.test_is_nn.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "__main__.test_is_nn.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.test_is_nn.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "__main__.test_is_nn.__temp28": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn.__temp28",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 1
                    },
                    "pc": 268,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn.__temp29": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn.__temp29",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 2
                    },
                    "pc": 273,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn.__temp30": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn.__temp30",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 30
                    },
                    "pc": 278,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn.base_array": {
            "cairo_type": "felt*",
            "full_name": "__main__.test_is_nn.base_array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 0
                    },
                    "pc": 267,
                    "value": "[cast(fp + (-6), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn.iter": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn.iter",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 0
                    },
                    "pc": 267,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn.last": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn.last",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 0
                    },
                    "pc": 267,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn.new_array": {
            "cairo_type": "felt*",
            "full_name": "__main__.test_is_nn.new_array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 0
                    },
                    "pc": 267,
                    "value": "[cast(fp + (-5), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 0
                    },
                    "pc": 267,
                    "value": "[cast(fp + (-7), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 29
                    },
                    "pc": 277,
                    "value": "[cast(ap + (-2), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 22,
                        "offset": 0
                    },
                    "pc": 287,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn.res": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn.res",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 21,
                        "offset": 29
                    },
                    "pc": 277,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn_le": {
            "decorators": [],
            "pc": 311,
            "type": "function"
        },
        "__main__.test_is_nn_le.Args": {
            "full_name": "__main__.test_is_nn_le.Args",
            "members": {
                "base_array": {
                    "cairo_type": "felt*",
                    "offset": 0
                },
                "iter": {
                    "cairo_type": "felt",
                    "offset": 2
                },
                "last": {
                    "cairo_type": "felt",
                    "offset": 3
                },
                "new_array": {
                    "cairo_type": "felt*",
                    "offset": 1
                }
            },
            "size": 4,
            "type": "struct"
        },
        "__main__.test_is_nn_le.ImplicitArgs": {
            "full_name": "__main__.test_is_nn_le.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "__main__.test_is_nn_le.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.test_is_nn_le.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "__main__.test_is_nn_le.__temp34": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn_le.__temp34",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 1
                    },
                    "pc": 312,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn_le.__temp35": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn_le.__temp35",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 2
                    },
                    "pc": 317,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn_le.__temp36": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn_le.__temp36",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 62
                    },
                    "pc": 324,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn_le.base_array": {
            "cairo_type": "felt*",
            "full_name": "__main__.test_is_nn_le.base_array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 0
                    },
                    "pc": 311,
                    "value": "[cast(fp + (-6), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn_le.iter": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn_le.iter",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 0
                    },
                    "pc": 311,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn_le.last": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn_le.last",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 0
                    },
                    "pc": 311,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn_le.new_array": {
            "cairo_type": "felt*",
            "full_name": "__main__.test_is_nn_le.new_array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 0
                    },
                    "pc": 311,
                    "value": "[cast(fp + (-5), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn_le.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn_le.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 0
                    },
                    "pc": 311,
                    "value": "[cast(fp + (-7), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 61
                    },
                    "pc": 323,
                    "value": "[cast(ap + (-2), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 26,
                        "offset": 0
                    },
                    "pc": 333,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_nn_le.res": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_nn_le.res",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 25,
                        "offset": 61
                    },
                    "pc": 323,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_not_zero": {
            "decorators": [],
            "pc": 247,
            "type": "function"
        },
        "__main__.test_is_not_zero.Args": {
            "full_name": "__main__.test_is_not_zero.Args",
            "members": {
                "base_array": {
                    "cairo_type": "felt*",
                    "offset": 0
                },
                "iter": {
                    "cairo_type": "felt",
                    "offset": 2
                },
                "last": {
                    "cairo_type": "felt",
                    "offset": 3
                },
                "new_array": {
                    "cairo_type": "felt*",
                    "offset": 1
                }
            },
            "size": 4,
            "type": "struct"
        },
        "__main__.test_is_not_zero.ImplicitArgs": {
            "full_name": "__main__.test_is_not_zero.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "__main__.test_is_not_zero.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.test_is_not_zero.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "__main__.test_is_not_zero.__temp25": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_not_zero.__temp25",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 1
                    },
                    "pc": 248,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_not_zero.__temp26": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_not_zero.__temp26",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 2
                    },
                    "pc": 253,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_not_zero.__temp27": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_not_zero.__temp27",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 7
                    },
                    "pc": 257,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_not_zero.base_array": {
            "cairo_type": "felt*",
            "full_name": "__main__.test_is_not_zero.base_array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 247,
                    "value": "[cast(fp + (-6), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_not_zero.iter": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_not_zero.iter",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 247,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_not_zero.last": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_not_zero.last",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 247,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_not_zero.new_array": {
            "cairo_type": "felt*",
            "full_name": "__main__.test_is_not_zero.new_array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 247,
                    "value": "[cast(fp + (-5), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_not_zero.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_not_zero.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 0
                    },
                    "pc": 247,
                    "value": "[cast(fp + (-7), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 20,
                        "offset": 0
                    },
                    "pc": 266,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.test_is_not_zero.res": {
            "cairo_type": "felt",
            "full_name": "__main__.test_is_not_zero.res",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 19,
                        "offset": 6
                    },
                    "pc": 256,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.alloc.alloc": {
            "decorators": [],
            "pc": 12,
            "type": "function"
        },
        "starkware.cairo.common.alloc.alloc.Args": {
            "full_name": "starkware.cairo.common.alloc.alloc.Args",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
            "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.common.alloc.alloc.Return": {
            "cairo_type": "(ptr: felt*)",
            "type": "type_definition"
        },
        "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.bool.FALSE": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.bool.TRUE": {
            "type": "const",
            "value": 1
        },
        "starkware.cairo.common.math.FALSE": {
            "destination": "starkware.cairo.common.bool.FALSE",
            "type": "alias"
        },
        "starkware.cairo.common.math.TRUE": {
            "destination": "starkware.cairo.common.bool.TRUE",
            "type": "alias"
        },
        "starkware.cairo.common.math.assert_le": {
            "decorators": [],
            "pc": 19,
            "type": "function"
        },
        "starkware.cairo.common.math.assert_le.Args": {
            "full_name": "starkware.cairo.common.math.assert_le.Args",
            "members": {
                "a": {
                    "cairo_type": "felt",
                    "offset": 0
                },
                "b": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 2,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_le.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_le.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math.assert_le.a": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le.a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 19,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le.b": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le.b",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 19,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 19,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 5
                    },
                    "pc": 23,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt": {
            "decorators": [
                "known_ap_change"
            ],
            "pc": 24,
            "type": "function"
        },
        "starkware.cairo.common.math.assert_le_felt.Args": {
            "full_name": "starkware.cairo.common.math.assert_le_felt.Args",
            "members": {
                "a": {
                    "cairo_type": "felt",
                    "offset": 0
                },
                "b": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 2,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_le_felt.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math.assert_le_felt.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_2_HIGH": {
            "type": "const",
            "value": 5316911983139663648412552867652567041
        },
        "starkware.cairo.common.math.assert_le_felt.PRIME_OVER_3_HIGH": {
            "type": "const",
            "value": 3544607988759775765608368578435044694
        },
        "starkware.cairo.common.math.assert_le_felt.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "starkware.cairo.common.math.assert_le_felt.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math.assert_le_felt.__temp0": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp0",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 1
                    },
                    "pc": 25,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp1": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp1",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 2
                    },
                    "pc": 26,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp10": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp10",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 14
                    },
                    "pc": 44,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp11": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp11",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 11
                    },
                    "pc": 52,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp12": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp12",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 13
                    },
                    "pc": 54,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp13": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp13",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 14
                    },
                    "pc": 56,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp14": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp14",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 11
                    },
                    "pc": 62,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp15": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp15",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 12
                    },
                    "pc": 63,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp2": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp2",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 3
                    },
                    "pc": 28,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp3": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp3",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 5
                    },
                    "pc": 30,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp4": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp4",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 6
                    },
                    "pc": 31,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp5": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp5",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 7
                    },
                    "pc": 33,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp6": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp6",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 10
                    },
                    "pc": 38,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp7": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp7",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 11
                    },
                    "pc": 39,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp8": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp8",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 12
                    },
                    "pc": 41,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.__temp9": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.__temp9",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 13
                    },
                    "pc": 43,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.a": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 24,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.arc_long": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.arc_long",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 8
                    },
                    "pc": 34,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.arc_prod": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.arc_prod",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 8
                    },
                    "pc": 34,
                    "value": "cast([ap + (-5)] * [ap + (-1)], felt)"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.arc_short": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.arc_short",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 4
                    },
                    "pc": 29,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.arc_sum": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.arc_sum",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 8
                    },
                    "pc": 34,
                    "value": "cast([ap + (-5)] + [ap + (-1)], felt)"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.b": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.b",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 24,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.m1mb": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.m1mb",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 12
                    },
                    "pc": 53,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_le_felt.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 0
                    },
                    "pc": 24,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 7,
                        "offset": 8
                    },
                    "pc": 34,
                    "value": "cast([fp + (-5)] + 4, felt)"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_le_felt.skip_exclude_a": {
            "pc": 48,
            "type": "label"
        },
        "starkware.cairo.common.math.assert_le_felt.skip_exclude_b_minus_a": {
            "pc": 60,
            "type": "label"
        },
        "starkware.cairo.common.math.assert_lt_felt": {
            "decorators": [
                "known_ap_change"
            ],
            "pc": 69,
            "type": "function"
        },
        "starkware.cairo.common.math.assert_lt_felt.Args": {
            "full_name": "starkware.cairo.common.math.assert_lt_felt.Args",
            "members": {
                "a": {
                    "cairo_type": "felt",
                    "offset": 0
                },
                "b": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 2,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math.assert_lt_felt.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_lt_felt.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "starkware.cairo.common.math.assert_lt_felt.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math.assert_lt_felt.__temp16": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_lt_felt.__temp16",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 1
                    },
                    "pc": 70,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_lt_felt.a": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_lt_felt.a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 69,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_lt_felt.b": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_lt_felt.b",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 69,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_lt_felt.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_lt_felt.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 0
                    },
                    "pc": 69,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 21
                    },
                    "pc": 79,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_nn": {
            "decorators": [],
            "pc": 15,
            "type": "function"
        },
        "starkware.cairo.common.math.assert_nn.Args": {
            "full_name": "starkware.cairo.common.math.assert_nn.Args",
            "members": {
                "a": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_nn.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math.assert_nn.a": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_nn.a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 15,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_nn.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_nn.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 15,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 5,
                        "offset": 0
                    },
                    "pc": 16,
                    "value": "cast([fp + (-4)] + 1, felt)"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.RC_BOUND": {
            "type": "const",
            "value": 340282366920938463463374607431768211456
        },
        "starkware.cairo.common.math_cmp.assert_le_felt": {
            "destination": "starkware.cairo.common.math.assert_le_felt",
            "type": "alias"
        },
        "starkware.cairo.common.math_cmp.assert_lt_felt": {
            "destination": "starkware.cairo.common.math.assert_lt_felt",
            "type": "alias"
        },
        "starkware.cairo.common.math_cmp.is_in_range": {
            "decorators": [
                "known_ap_change"
            ],
            "pc": 185,
            "type": "function"
        },
        "starkware.cairo.common.math_cmp.is_in_range.Args": {
            "full_name": "starkware.cairo.common.math_cmp.is_in_range.Args",
            "members": {
                "lower": {
                    "cairo_type": "felt",
                    "offset": 1
                },
                "upper": {
                    "cairo_type": "felt",
                    "offset": 2
                },
                "value": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 3,
            "type": "struct"
        },
        "starkware.cairo.common.math_cmp.is_in_range.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math_cmp.is_in_range.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math_cmp.is_in_range.Return": {
            "cairo_type": "felt",
            "type": "type_definition"
        },
        "starkware.cairo.common.math_cmp.is_in_range.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math_cmp.is_in_range.__temp22": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_in_range.__temp22",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 33
                    },
                    "pc": 199,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_in_range.lower": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_in_range.lower",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 185,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_in_range.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_in_range.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 185,
                    "value": "[cast(fp + (-6), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 32
                    },
                    "pc": 190,
                    "value": "[cast(ap + (-2), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 60
                    },
                    "pc": 203,
                    "value": "[cast(ap + (-2), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_in_range.res": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_in_range.res",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 32
                    },
                    "pc": 190,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_in_range.upper": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_in_range.upper",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 185,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_in_range.value": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_in_range.value",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 14,
                        "offset": 0
                    },
                    "pc": 185,
                    "value": "[cast(fp + (-5), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_le": {
            "decorators": [
                "known_ap_change"
            ],
            "pc": 164,
            "type": "function"
        },
        "starkware.cairo.common.math_cmp.is_le.Args": {
            "full_name": "starkware.cairo.common.math_cmp.is_le.Args",
            "members": {
                "a": {
                    "cairo_type": "felt",
                    "offset": 0
                },
                "b": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 2,
            "type": "struct"
        },
        "starkware.cairo.common.math_cmp.is_le.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math_cmp.is_le.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math_cmp.is_le.Return": {
            "cairo_type": "felt",
            "type": "type_definition"
        },
        "starkware.cairo.common.math_cmp.is_le.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math_cmp.is_le.a": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_le.a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 164,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_le.b": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_le.b",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 164,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_le.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_le.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 0
                    },
                    "pc": 164,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 12,
                        "offset": 27
                    },
                    "pc": 168,
                    "value": "[cast(ap + (-2), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_le_felt": {
            "decorators": [
                "known_ap_change"
            ],
            "pc": 204,
            "type": "function"
        },
        "starkware.cairo.common.math_cmp.is_le_felt.Args": {
            "full_name": "starkware.cairo.common.math_cmp.is_le_felt.Args",
            "members": {
                "a": {
                    "cairo_type": "felt",
                    "offset": 0
                },
                "b": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 2,
            "type": "struct"
        },
        "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math_cmp.is_le_felt.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math_cmp.is_le_felt.Return": {
            "cairo_type": "felt",
            "type": "type_definition"
        },
        "starkware.cairo.common.math_cmp.is_le_felt.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math_cmp.is_le_felt.a": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_le_felt.a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 204,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_le_felt.b": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_le_felt.b",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 204,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_le_felt.not_le": {
            "pc": 216,
            "type": "label"
        },
        "starkware.cairo.common.math_cmp.is_le_felt.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_le_felt.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 0
                    },
                    "pc": 204,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 27
                    },
                    "pc": 213,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 15,
                        "offset": 27
                    },
                    "pc": 221,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_nn": {
            "decorators": [
                "known_ap_change"
            ],
            "pc": 131,
            "type": "function"
        },
        "starkware.cairo.common.math_cmp.is_nn.Args": {
            "full_name": "starkware.cairo.common.math_cmp.is_nn.Args",
            "members": {
                "a": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math_cmp.is_nn.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math_cmp.is_nn.Return": {
            "cairo_type": "felt",
            "type": "type_definition"
        },
        "starkware.cairo.common.math_cmp.is_nn.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math_cmp.is_nn.__temp20": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_nn.__temp20",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 3
                    },
                    "pc": 145,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_nn.__temp21": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_nn.__temp21",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 4
                    },
                    "pc": 147,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_nn.a": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_nn.a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 131,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_nn.need_felt_comparison": {
            "pc": 155,
            "type": "label"
        },
        "starkware.cairo.common.math_cmp.is_nn.out_of_range": {
            "pc": 141,
            "type": "label"
        },
        "starkware.cairo.common.math_cmp.is_nn.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_nn.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 0
                    },
                    "pc": 131,
                    "value": "[cast(fp + (-4), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 21
                    },
                    "pc": 136,
                    "value": "cast([fp + (-4)] + 1, felt)"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 21
                    },
                    "pc": 150,
                    "value": "cast([fp + (-4)] + 1, felt)"
                },
                {
                    "ap_tracking_data": {
                        "group": 11,
                        "offset": 22
                    },
                    "pc": 161,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_nn_le": {
            "decorators": [
                "known_ap_change"
            ],
            "pc": 169,
            "type": "function"
        },
        "starkware.cairo.common.math_cmp.is_nn_le.Args": {
            "full_name": "starkware.cairo.common.math_cmp.is_nn_le.Args",
            "members": {
                "a": {
                    "cairo_type": "felt",
                    "offset": 0
                },
                "b": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 2,
            "type": "struct"
        },
        "starkware.cairo.common.math_cmp.is_nn_le.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math_cmp.is_nn_le.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math_cmp.is_nn_le.Return": {
            "cairo_type": "felt",
            "type": "type_definition"
        },
        "starkware.cairo.common.math_cmp.is_nn_le.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math_cmp.is_nn_le.a": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_nn_le.a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 169,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_nn_le.b": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_nn_le.b",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 169,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_nn_le.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_nn_le.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 0
                    },
                    "pc": 169,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 27
                    },
                    "pc": 173,
                    "value": "[cast(ap + (-2), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 54
                    },
                    "pc": 184,
                    "value": "[cast(ap + (-2), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_nn_le.res": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_nn_le.res",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 13,
                        "offset": 27
                    },
                    "pc": 173,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math_cmp.is_not_zero": {
            "decorators": [
                "known_ap_change"
            ],
            "pc": 123,
            "type": "function"
        },
        "starkware.cairo.common.math_cmp.is_not_zero.Args": {
            "full_name": "starkware.cairo.common.math_cmp.is_not_zero.Args",
            "members": {
                "value": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.math_cmp.is_not_zero.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math_cmp.is_not_zero.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.common.math_cmp.is_not_zero.Return": {
            "cairo_type": "felt",
            "type": "type_definition"
        },
        "starkware.cairo.common.math_cmp.is_not_zero.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math_cmp.is_not_zero.value": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math_cmp.is_not_zero.value",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 10,
                        "offset": 0
                    },
                    "pc": 123,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.assert_le": {
            "destination": "starkware.cairo.common.math.assert_le",
            "type": "alias"
        },
        "starkware.cairo.common.pow.get_ap": {
            "destination": "starkware.cairo.common.registers.get_ap",
            "type": "alias"
        },
        "starkware.cairo.common.pow.get_fp_and_pc": {
            "destination": "starkware.cairo.common.registers.get_fp_and_pc",
            "type": "alias"
        },
        "starkware.cairo.common.pow.pow": {
            "decorators": [],
            "pc": 80,
            "type": "function"
        },
        "starkware.cairo.common.pow.pow.Args": {
            "full_name": "starkware.cairo.common.pow.pow.Args",
            "members": {
                "base": {
                    "cairo_type": "felt",
                    "offset": 0
                },
                "exp": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 2,
            "type": "struct"
        },
        "starkware.cairo.common.pow.pow.ImplicitArgs": {
            "full_name": "starkware.cairo.common.pow.pow.ImplicitArgs",
            "members": {
                "range_check_ptr": {
                    "cairo_type": "felt",
                    "offset": 0
                }
            },
            "size": 1,
            "type": "struct"
        },
        "starkware.cairo.common.pow.pow.LoopLocals": {
            "full_name": "starkware.cairo.common.pow.pow.LoopLocals",
            "members": {
                "base": {
                    "cairo_type": "felt",
                    "offset": 3
                },
                "bit": {
                    "cairo_type": "felt",
                    "offset": 0
                },
                "exp": {
                    "cairo_type": "felt",
                    "offset": 4
                },
                "res": {
                    "cairo_type": "felt",
                    "offset": 2
                },
                "temp0": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 5,
            "type": "struct"
        },
        "starkware.cairo.common.pow.pow.Return": {
            "cairo_type": "(res: felt)",
            "type": "type_definition"
        },
        "starkware.cairo.common.pow.pow.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.pow.pow.__ap__": {
            "cairo_type": "felt*",
            "full_name": "starkware.cairo.common.pow.pow.__ap__",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 13
                    },
                    "pc": 107,
                    "value": "[cast(ap + (-1), felt**)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.pow.__fp__": {
            "cairo_type": "felt*",
            "full_name": "starkware.cairo.common.pow.pow.__fp__",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 15
                    },
                    "pc": 109,
                    "value": "[cast(ap + (-2), felt**)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.pow.__temp17": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.pow.pow.__temp17",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 16
                    },
                    "pc": 111,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.pow.__temp18": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.pow.pow.__temp18",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 17
                    },
                    "pc": 112,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.pow.__temp19": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.pow.pow.__temp19",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 18
                    },
                    "pc": 114,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.pow.base": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.pow.pow.base",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 80,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.pow.even": {
            "pc": 93,
            "type": "label"
        },
        "starkware.cairo.common.pow.pow.exp": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.pow.pow.exp",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 80,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.pow.initial_locs": {
            "cairo_type": "starkware.cairo.common.pow.pow.LoopLocals*",
            "full_name": "starkware.cairo.common.pow.pow.initial_locs",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 86,
                    "value": "cast(fp + (-2), starkware.cairo.common.pow.pow.LoopLocals*)"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.pow.locs": {
            "cairo_type": "starkware.cairo.common.pow.pow.LoopLocals*",
            "full_name": "starkware.cairo.common.pow.pow.locs",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 3
                    },
                    "pc": 90,
                    "value": "cast(ap, starkware.cairo.common.pow.pow.LoopLocals*)"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.pow.loop": {
            "pc": 90,
            "type": "label"
        },
        "starkware.cairo.common.pow.pow.n_steps": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.pow.pow.n_steps",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 15
                    },
                    "pc": 109,
                    "value": "cast(([ap + (-3)] - (fp + (-2))) * (-723700557733226242739464556619014021124621443066319339994618411227174404096) + (-1), felt)"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.pow.odd": {
            "pc": 98,
            "type": "label"
        },
        "starkware.cairo.common.pow.pow.prev_locs": {
            "cairo_type": "starkware.cairo.common.pow.pow.LoopLocals*",
            "full_name": "starkware.cairo.common.pow.pow.prev_locs",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 3
                    },
                    "pc": 90,
                    "value": "cast(ap + (-5), starkware.cairo.common.pow.pow.LoopLocals*)"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.pow.range_check_ptr": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.pow.pow.range_check_ptr",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 0
                    },
                    "pc": 80,
                    "value": "[cast(fp + (-5), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 9,
                        "offset": 28
                    },
                    "pc": 121,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.pow.sign": {
            "destination": "starkware.cairo.common.math.sign",
            "type": "alias"
        },
        "starkware.cairo.common.registers.get_ap": {
            "destination": "starkware.cairo.lang.compiler.lib.registers.get_ap",
            "type": "alias"
        },
        "starkware.cairo.common.registers.get_fp_and_pc": {
            "destination": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc",
            "type": "alias"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_ap": {
            "decorators": [
                "known_ap_change"
            ],
            "pc": 7,
            "type": "function"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_ap.Args": {
            "full_name": "starkware.cairo.lang.compiler.lib.registers.get_ap.Args",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_ap.ImplicitArgs": {
            "full_name": "starkware.cairo.lang.compiler.lib.registers.get_ap.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_ap.Return": {
            "cairo_type": "(ap_val: felt*)",
            "type": "type_definition"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_ap.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.lang.compiler.lib.registers.get_ap.fp_val": {
            "cairo_type": "felt*",
            "full_name": "starkware.cairo.lang.compiler.lib.registers.get_ap.fp_val",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 2
                    },
                    "pc": 9,
                    "value": "[cast(ap + (-2), felt**)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_ap.pc_val": {
            "cairo_type": "felt*",
            "full_name": "starkware.cairo.lang.compiler.lib.registers.get_ap.pc_val",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 3,
                        "offset": 2
                    },
                    "pc": 9,
                    "value": "[cast(ap + (-1), felt**)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc": {
            "decorators": [],
            "pc": 6,
            "type": "function"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args": {
            "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Args",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs": {
            "full_name": "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.Return": {
            "cairo_type": "(fp_val: felt*, pc_val: felt*)",
            "type": "type_definition"
        },
        "starkware.cairo.lang.compiler.lib.registers.get_fp_and_pc.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        }
    },
    "main_scope": "__main__",
    "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
    "reference_manager": {
        "references": [
            {
                "ap_tracking_data": {
                    "group": 3,
                    "offset": 2
                },
                "pc": 9,
                "value": "[cast(ap + (-2), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 3,
                    "offset": 2
                },
                "pc": 9,
                "value": "[cast(ap + (-1), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 5,
                    "offset": 0
                },
                "pc": 15,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 5,
                    "offset": 0
                },
                "pc": 15,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 5,
                    "offset": 0
                },
                "pc": 16,
                "value": "cast([fp + (-4)] + 1, felt)"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 0
                },
                "pc": 19,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 0
                },
                "pc": 19,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 0
                },
                "pc": 19,
                "value": "[cast(fp + (-5), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 5
                },
                "pc": 23,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 0
                },
                "pc": 24,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 0
                },
                "pc": 24,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 0
                },
                "pc": 24,
                "value": "[cast(fp + (-5), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 1
                },
                "pc": 25,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 2
                },
                "pc": 26,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 3
                },
                "pc": 28,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 4
                },
                "pc": 29,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 5
                },
                "pc": 30,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 6
                },
                "pc": 31,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 7
                },
                "pc": 33,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 8
                },
                "pc": 34,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 8
                },
                "pc": 34,
                "value": "cast([fp + (-5)] + 4, felt)"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 8
                },
                "pc": 34,
                "value": "cast([ap + (-5)] + [ap + (-1)], felt)"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 8
                },
                "pc": 34,
                "value": "cast([ap + (-5)] * [ap + (-1)], felt)"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 10
                },
                "pc": 38,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 11
                },
                "pc": 39,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 12
                },
                "pc": 41,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 13
                },
                "pc": 43,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 14
                },
                "pc": 44,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 11
                },
                "pc": 52,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 12
                },
                "pc": 53,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 13
                },
                "pc": 54,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 14
                },
                "pc": 56,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 11
                },
                "pc": 62,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 7,
                    "offset": 12
                },
                "pc": 63,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 8,
                    "offset": 0
                },
                "pc": 69,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 8,
                    "offset": 0
                },
                "pc": 69,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 8,
                    "offset": 0
                },
                "pc": 69,
                "value": "[cast(fp + (-5), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 8,
                    "offset": 1
                },
                "pc": 70,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 8,
                    "offset": 21
                },
                "pc": 79,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 0
                },
                "pc": 80,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 0
                },
                "pc": 80,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 0
                },
                "pc": 80,
                "value": "[cast(fp + (-5), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 0
                },
                "pc": 86,
                "value": "cast(fp + (-2), starkware.cairo.common.pow.pow.LoopLocals*)"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 3
                },
                "pc": 90,
                "value": "cast(ap + (-5), starkware.cairo.common.pow.pow.LoopLocals*)"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 3
                },
                "pc": 90,
                "value": "cast(ap, starkware.cairo.common.pow.pow.LoopLocals*)"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 13
                },
                "pc": 107,
                "value": "[cast(ap + (-1), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 15
                },
                "pc": 109,
                "value": "[cast(ap + (-2), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 15
                },
                "pc": 109,
                "value": "cast(([ap + (-3)] - (fp + (-2))) * (-723700557733226242739464556619014021124621443066319339994618411227174404096) + (-1), felt)"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 16
                },
                "pc": 111,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 17
                },
                "pc": 112,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 18
                },
                "pc": 114,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 9,
                    "offset": 28
                },
                "pc": 121,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 10,
                    "offset": 0
                },
                "pc": 123,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 11,
                    "offset": 0
                },
                "pc": 131,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 11,
                    "offset": 0
                },
                "pc": 131,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 11,
                    "offset": 21
                },
                "pc": 136,
                "value": "cast([fp + (-4)] + 1, felt)"
            },
            {
                "ap_tracking_data": {
                    "group": 11,
                    "offset": 3
                },
                "pc": 145,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 11,
                    "offset": 4
                },
                "pc": 147,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 11,
                    "offset": 21
                },
                "pc": 150,
                "value": "cast([fp + (-4)] + 1, felt)"
            },
            {
                "ap_tracking_data": {
                    "group": 11,
                    "offset": 22
                },
                "pc": 161,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 12,
                    "offset": 0
                },
                "pc": 164,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 12,
                    "offset": 0
                },
                "pc": 164,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 12,
                    "offset": 0
                },
                "pc": 164,
                "value": "[cast(fp + (-5), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 12,
                    "offset": 27
                },
                "pc": 168,
                "value": "[cast(ap + (-2), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 13,
                    "offset": 0
                },
                "pc": 169,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 13,
                    "offset": 0
                },
                "pc": 169,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 13,
                    "offset": 0
                },
                "pc": 169,
                "value": "[cast(fp + (-5), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 13,
                    "offset": 27
                },
                "pc": 173,
                "value": "[cast(ap + (-2), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 13,
                    "offset": 27
                },
                "pc": 173,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 13,
                    "offset": 54
                },
                "pc": 184,
                "value": "[cast(ap + (-2), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 14,
                    "offset": 0
                },
                "pc": 185,
                "value": "[cast(fp + (-5), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 14,
                    "offset": 0
                },
                "pc": 185,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 14,
                    "offset": 0
                },
                "pc": 185,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 14,
                    "offset": 0
                },
                "pc": 185,
                "value": "[cast(fp + (-6), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 14,
                    "offset": 32
                },
                "pc": 190,
                "value": "[cast(ap + (-2), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 14,
                    "offset": 32
                },
                "pc": 190,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 14,
                    "offset": 33
                },
                "pc": 199,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 14,
                    "offset": 60
                },
                "pc": 203,
                "value": "[cast(ap + (-2), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 15,
                    "offset": 0
                },
                "pc": 204,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 15,
                    "offset": 0
                },
                "pc": 204,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 15,
                    "offset": 0
                },
                "pc": 204,
                "value": "[cast(fp + (-5), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 15,
                    "offset": 27
                },
                "pc": 213,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 15,
                    "offset": 27
                },
                "pc": 221,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 16,
                    "offset": 0
                },
                "pc": 224,
                "value": "[cast(fp + (-8), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 16,
                    "offset": 0
                },
                "pc": 224,
                "value": "[cast(fp + (-7), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 16,
                    "offset": 0
                },
                "pc": 224,
                "value": "[cast(fp + (-6), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 16,
                    "offset": 0
                },
                "pc": 224,
                "value": "[cast(fp + (-5), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 16,
                    "offset": 0
                },
                "pc": 224,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 16,
                    "offset": 0
                },
                "pc": 224,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 16,
                    "offset": 0
                },
                "pc": 224,
                "value": "[cast(fp + (-9), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 16,
                    "offset": 1
                },
                "pc": 225,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 17,
                    "offset": 0
                },
                "pc": 234,
                "value": "[cast(ap + (-2), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 17,
                    "offset": 0
                },
                "pc": 234,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 17,
                    "offset": 1
                },
                "pc": 235,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 18,
                    "offset": 0
                },
                "pc": 246,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 19,
                    "offset": 0
                },
                "pc": 247,
                "value": "[cast(fp + (-6), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 19,
                    "offset": 0
                },
                "pc": 247,
                "value": "[cast(fp + (-5), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 19,
                    "offset": 0
                },
                "pc": 247,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 19,
                    "offset": 0
                },
                "pc": 247,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 19,
                    "offset": 0
                },
                "pc": 247,
                "value": "[cast(fp + (-7), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 19,
                    "offset": 1
                },
                "pc": 248,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 19,
                    "offset": 2
                },
                "pc": 253,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 19,
                    "offset": 6
                },
                "pc": 256,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 19,
                    "offset": 7
                },
                "pc": 257,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 20,
                    "offset": 0
                },
                "pc": 266,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 21,
                    "offset": 0
                },
                "pc": 267,
                "value": "[cast(fp + (-6), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 21,
                    "offset": 0
                },
                "pc": 267,
                "value": "[cast(fp + (-5), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 21,
                    "offset": 0
                },
                "pc": 267,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 21,
                    "offset": 0
                },
                "pc": 267,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 21,
                    "offset": 0
                },
                "pc": 267,
                "value": "[cast(fp + (-7), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 21,
                    "offset": 1
                },
                "pc": 268,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 21,
                    "offset": 2
                },
                "pc": 273,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 21,
                    "offset": 29
                },
                "pc": 277,
                "value": "[cast(ap + (-2), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 21,
                    "offset": 29
                },
                "pc": 277,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 21,
                    "offset": 30
                },
                "pc": 278,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 22,
                    "offset": 0
                },
                "pc": 287,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 23,
                    "offset": 0
                },
                "pc": 288,
                "value": "[cast(fp + (-6), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 23,
                    "offset": 0
                },
                "pc": 288,
                "value": "[cast(fp + (-5), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 23,
                    "offset": 0
                },
                "pc": 288,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 23,
                    "offset": 0
                },
                "pc": 288,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 23,
                    "offset": 0
                },
                "pc": 288,
                "value": "[cast(fp + (-7), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 23,
                    "offset": 1
                },
                "pc": 289,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 23,
                    "offset": 2
                },
                "pc": 294,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 23,
                    "offset": 34
                },
                "pc": 300,
                "value": "[cast(ap + (-2), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 23,
                    "offset": 34
                },
                "pc": 300,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 23,
                    "offset": 35
                },
                "pc": 301,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 24,
                    "offset": 0
                },
                "pc": 310,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 25,
                    "offset": 0
                },
                "pc": 311,
                "value": "[cast(fp + (-6), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 25,
                    "offset": 0
                },
                "pc": 311,
                "value": "[cast(fp + (-5), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 25,
                    "offset": 0
                },
                "pc": 311,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 25,
                    "offset": 0
                },
                "pc": 311,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 25,
                    "offset": 0
                },
                "pc": 311,
                "value": "[cast(fp + (-7), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 25,
                    "offset": 1
                },
                "pc": 312,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 25,
                    "offset": 2
                },
                "pc": 317,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 25,
                    "offset": 61
                },
                "pc": 323,
                "value": "[cast(ap + (-2), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 25,
                    "offset": 61
                },
                "pc": 323,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 25,
                    "offset": 62
                },
                "pc": 324,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 26,
                    "offset": 0
                },
                "pc": 333,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 27,
                    "offset": 0
                },
                "pc": 334,
                "value": "[cast(fp + (-6), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 27,
                    "offset": 0
                },
                "pc": 334,
                "value": "[cast(fp + (-5), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 27,
                    "offset": 0
                },
                "pc": 334,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 27,
                    "offset": 0
                },
                "pc": 334,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 27,
                    "offset": 0
                },
                "pc": 334,
                "value": "[cast(fp + (-7), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 27,
                    "offset": 1
                },
                "pc": 335,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 27,
                    "offset": 2
                },
                "pc": 340,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 27,
                    "offset": 3
                },
                "pc": 342,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 27,
                    "offset": 4
                },
                "pc": 343,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 27,
                    "offset": 70
                },
                "pc": 350,
                "value": "[cast(ap + (-2), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 27,
                    "offset": 70
                },
                "pc": 350,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 27,
                    "offset": 71
                },
                "pc": 351,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 28,
                    "offset": 0
                },
                "pc": 360,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 29,
                    "offset": 0
                },
                "pc": 361,
                "value": "[cast(fp + (-6), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 29,
                    "offset": 0
                },
                "pc": 361,
                "value": "[cast(fp + (-5), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 29,
                    "offset": 0
                },
                "pc": 361,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 29,
                    "offset": 0
                },
                "pc": 361,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 29,
                    "offset": 0
                },
                "pc": 361,
                "value": "[cast(fp + (-7), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 29,
                    "offset": 1
                },
                "pc": 362,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 29,
                    "offset": 2
                },
                "pc": 367,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 29,
                    "offset": 35
                },
                "pc": 373,
                "value": "[cast(ap + (-2), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 29,
                    "offset": 35
                },
                "pc": 373,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 29,
                    "offset": 36
                },
                "pc": 374,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 30,
                    "offset": 0
                },
                "pc": 383,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 31,
                    "offset": 0
                },
                "pc": 384,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 31,
                    "offset": 0
                },
                "pc": 384,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 31,
                    "offset": 4
                },
                "pc": 388,
                "value": "[cast(ap + (-1), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 31,
                    "offset": 4
                },
                "pc": 389,
                "value": "[cast(fp, felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 32,
                    "offset": 0
                },
                "pc": 402,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 32,
                    "offset": 3
                },
                "pc": 404,
                "value": "[cast(ap + (-1), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 33,
                    "offset": 0
                },
                "pc": 412,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 33,
                    "offset": 3
                },
                "pc": 414,
                "value": "[cast(ap + (-1), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 34,
                    "offset": 0
                },
                "pc": 422,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 34,
                    "offset": 3
                },
                "pc": 424,
                "value": "[cast(ap + (-1), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 35,
                    "offset": 0
                },
                "pc": 432,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 35,
                    "offset": 3
                },
                "pc": 434,
                "value": "[cast(ap + (-1), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 36,
                    "offset": 0
                },
                "pc": 442,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 36,
                    "offset": 3
                },
                "pc": 444,
                "value": "[cast(ap + (-1), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 37,
                    "offset": 0
                },
                "pc": 453,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 37,
                    "offset": 3
                },
                "pc": 455,
                "value": "[cast(ap + (-1), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 38,
                    "offset": 0
                },
                "pc": 463,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 39,
                    "offset": 0
                },
                "pc": 464,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 40,
                    "offset": 0
                },
                "pc": 469,
                "value": "[cast(ap + (-1), felt*)]"
            }
        ]
    }
}
