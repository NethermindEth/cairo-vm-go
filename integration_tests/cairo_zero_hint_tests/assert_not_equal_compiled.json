{
    "attributes": [],
    "builtins": [],
    "compiler_version": "0.13.1",
    "data": [
        "0x40780017fff7fff",
        "0x0",
        "0x1104800180018000",
        "0x30",
        "0x10780017fff7fff",
        "0x0",
        "0x48297ffd80007ffc",
        "0x20680017fff7fff",
        "0x4",
        "0x402780017ffc7ffc",
        "0x1",
        "0x208b7fff7fff7ffe",
        "0x40780017fff7fff",
        "0x1",
        "0x208b7fff7fff7ffe",
        "0x48297ffc80007ffd",
        "0x20680017fff7fff",
        "0x3",
        "0x208b7fff7fff7ffe",
        "0x482a7ffd7ffa8000",
        "0x482a7ffd7ffb8000",
        "0x480080007ffe8000",
        "0x480080007ffe8000",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
        "0x480a7ffa7fff8000",
        "0x480a7ffb7fff8000",
        "0x480a7ffc7fff8000",
        "0x482680017ffd8000",
        "0x1",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff2",
        "0x208b7fff7fff7ffe",
        "0x48297ffc80007ffd",
        "0x20680017fff7fff",
        "0x3",
        "0x208b7fff7fff7ffe",
        "0x482a7ffd7ff98000",
        "0x484a7ffd7ffb8000",
        "0x48327fff7ffa8000",
        "0x400080007ffd7fff",
        "0x480a7ff97fff8000",
        "0x480a7ffa7fff8000",
        "0x480a7ffb7fff8000",
        "0x480a7ffc7fff8000",
        "0x482680017ffd8000",
        "0x1",
        "0x1104800180018000",
        "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff3",
        "0x208b7fff7fff7ffe",
        "0x40780017fff7fff",
        "0x3",
        "0x480680017fff8000",
        "0xa",
        "0x40137fff7fff8000",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd6",
        "0x40137fff7fff8001",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
        "0x40137fff7fff8002",
        "0x480a80017fff8000",
        "0x480680017fff8000",
        "0x3",
        "0x480680017fff8000",
        "0x5a",
        "0x480a80007fff8000",
        "0x480680017fff8000",
        "0x0",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdd",
        "0x480a80027fff8000",
        "0x480680017fff8000",
        "0x7",
        "0x480680017fff8000",
        "0x3",
        "0x480a80007fff8000",
        "0x480680017fff8000",
        "0x0",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd3",
        "0x480a80017fff8000",
        "0x480a80027fff8000",
        "0x480a80007fff8000",
        "0x480680017fff8000",
        "0x0",
        "0x1104800180018000",
        "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffba",
        "0x208b7fff7fff7ffe"
    ],
    "debug_info": null,
    "hints": {
        "6": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.math",
                    "starkware.cairo.common.math.assert_not_equal"
                ],
                "code": "from starkware.cairo.lang.vm.relocatable import RelocatableValue\nboth_ints = isinstance(ids.a, int) and isinstance(ids.b, int)\nboth_relocatable = (\n    isinstance(ids.a, RelocatableValue) and isinstance(ids.b, RelocatableValue) and\n    ids.a.segment_index == ids.b.segment_index)\nassert both_ints or both_relocatable, \\\n    f'assert_not_equal failed: non-comparable values: {ids.a}, {ids.b}.'\nassert (ids.a - ids.b) % PRIME != 0, f'assert_not_equal failed: {ids.a} = {ids.b}.'",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 2,
                        "offset": 0
                    },
                    "reference_ids": {
                        "starkware.cairo.common.math.assert_not_equal.a": 0,
                        "starkware.cairo.common.math.assert_not_equal.b": 1
                    }
                }
            }
        ],
        "12": [
            {
                "accessible_scopes": [
                    "starkware.cairo.common.alloc",
                    "starkware.cairo.common.alloc.alloc"
                ],
                "code": "memory[ap] = segments.add()",
                "flow_tracking_data": {
                    "ap_tracking": {
                        "group": 3,
                        "offset": 0
                    },
                    "reference_ids": {}
                }
            }
        ]
    },
    "identifiers": {
        "__main__.__end__": {
            "pc": 4,
            "type": "label"
        },
        "__main__.__start__": {
            "pc": 0,
            "type": "label"
        },
        "__main__.alloc": {
            "destination": "starkware.cairo.common.alloc.alloc",
            "type": "alias"
        },
        "__main__.assert_not_equal": {
            "destination": "starkware.cairo.common.math.assert_not_equal",
            "type": "alias"
        },
        "__main__.compare_different_arrays": {
            "decorators": [],
            "pc": 15,
            "type": "function"
        },
        "__main__.compare_different_arrays.Args": {
            "full_name": "__main__.compare_different_arrays.Args",
            "members": {
                "array_a": {
                    "cairo_type": "felt*",
                    "offset": 0
                },
                "array_b": {
                    "cairo_type": "felt*",
                    "offset": 1
                },
                "array_length": {
                    "cairo_type": "felt",
                    "offset": 2
                },
                "iterator": {
                    "cairo_type": "felt",
                    "offset": 3
                }
            },
            "size": 4,
            "type": "struct"
        },
        "__main__.compare_different_arrays.ImplicitArgs": {
            "full_name": "__main__.compare_different_arrays.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "__main__.compare_different_arrays.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.compare_different_arrays.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "__main__.compare_different_arrays.__temp1": {
            "cairo_type": "felt",
            "full_name": "__main__.compare_different_arrays.__temp1",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 1
                    },
                    "pc": 16,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.compare_different_arrays.__temp2": {
            "cairo_type": "felt",
            "full_name": "__main__.compare_different_arrays.__temp2",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 2
                    },
                    "pc": 20,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.compare_different_arrays.__temp3": {
            "cairo_type": "felt",
            "full_name": "__main__.compare_different_arrays.__temp3",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 3
                    },
                    "pc": 21,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.compare_different_arrays.array_a": {
            "cairo_type": "felt*",
            "full_name": "__main__.compare_different_arrays.array_a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 15,
                    "value": "[cast(fp + (-6), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.compare_different_arrays.array_b": {
            "cairo_type": "felt*",
            "full_name": "__main__.compare_different_arrays.array_b",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 15,
                    "value": "[cast(fp + (-5), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.compare_different_arrays.array_length": {
            "cairo_type": "felt",
            "full_name": "__main__.compare_different_arrays.array_length",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 15,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.compare_different_arrays.iterator": {
            "cairo_type": "felt",
            "full_name": "__main__.compare_different_arrays.iterator",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 4,
                        "offset": 0
                    },
                    "pc": 15,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array": {
            "decorators": [],
            "pc": 33,
            "type": "function"
        },
        "__main__.fill_array.Args": {
            "full_name": "__main__.fill_array.Args",
            "members": {
                "array": {
                    "cairo_type": "felt*",
                    "offset": 0
                },
                "array_length": {
                    "cairo_type": "felt",
                    "offset": 3
                },
                "base": {
                    "cairo_type": "felt",
                    "offset": 1
                },
                "iterator": {
                    "cairo_type": "felt",
                    "offset": 4
                },
                "step": {
                    "cairo_type": "felt",
                    "offset": 2
                }
            },
            "size": 5,
            "type": "struct"
        },
        "__main__.fill_array.ImplicitArgs": {
            "full_name": "__main__.fill_array.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "__main__.fill_array.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.fill_array.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "__main__.fill_array.__temp4": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array.__temp4",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 1
                    },
                    "pc": 34,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array.__temp5": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array.__temp5",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 2
                    },
                    "pc": 38,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array.__temp6": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array.__temp6",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 3
                    },
                    "pc": 39,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array.__temp7": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array.__temp7",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 4
                    },
                    "pc": 40,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array.array": {
            "cairo_type": "felt*",
            "full_name": "__main__.fill_array.array",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 33,
                    "value": "[cast(fp + (-7), felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array.array_length": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array.array_length",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 33,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array.base": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array.base",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 33,
                    "value": "[cast(fp + (-6), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array.iterator": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array.iterator",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 33,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.fill_array.step": {
            "cairo_type": "felt",
            "full_name": "__main__.fill_array.step",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 6,
                        "offset": 0
                    },
                    "pc": 33,
                    "value": "[cast(fp + (-5), felt*)]"
                }
            ],
            "type": "reference"
        },
        "__main__.main": {
            "decorators": [],
            "pc": 50,
            "type": "function"
        },
        "__main__.main.Args": {
            "full_name": "__main__.main.Args",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "__main__.main.ImplicitArgs": {
            "full_name": "__main__.main.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "__main__.main.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "__main__.main.SIZEOF_LOCALS": {
            "type": "const",
            "value": 3
        },
        "__main__.main.array_a": {
            "cairo_type": "felt*",
            "full_name": "__main__.main.array_a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 7
                    },
                    "pc": 57,
                    "value": "[cast(ap + (-1), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 7
                    },
                    "pc": 58,
                    "value": "[cast(fp + 1, felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.main.array_b": {
            "cairo_type": "felt*",
            "full_name": "__main__.main.array_b",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 10
                    },
                    "pc": 60,
                    "value": "[cast(ap + (-1), felt**)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 10
                    },
                    "pc": 61,
                    "value": "[cast(fp + 2, felt**)]"
                }
            ],
            "type": "reference"
        },
        "__main__.main.array_length": {
            "cairo_type": "felt",
            "full_name": "__main__.main.array_length",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 4
                    },
                    "pc": 54,
                    "value": "[cast(ap + (-1), felt*)]"
                },
                {
                    "ap_tracking_data": {
                        "group": 8,
                        "offset": 4
                    },
                    "pc": 55,
                    "value": "[cast(fp, felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.alloc.alloc": {
            "decorators": [],
            "pc": 12,
            "type": "function"
        },
        "starkware.cairo.common.alloc.alloc.Args": {
            "full_name": "starkware.cairo.common.alloc.alloc.Args",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
            "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.common.alloc.alloc.Return": {
            "cairo_type": "(ptr: felt*)",
            "type": "type_definition"
        },
        "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.bool.FALSE": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.bool.TRUE": {
            "type": "const",
            "value": 1
        },
        "starkware.cairo.common.math.FALSE": {
            "destination": "starkware.cairo.common.bool.FALSE",
            "type": "alias"
        },
        "starkware.cairo.common.math.TRUE": {
            "destination": "starkware.cairo.common.bool.TRUE",
            "type": "alias"
        },
        "starkware.cairo.common.math.assert_not_equal": {
            "decorators": [],
            "pc": 6,
            "type": "function"
        },
        "starkware.cairo.common.math.assert_not_equal.Args": {
            "full_name": "starkware.cairo.common.math.assert_not_equal.Args",
            "members": {
                "a": {
                    "cairo_type": "felt",
                    "offset": 0
                },
                "b": {
                    "cairo_type": "felt",
                    "offset": 1
                }
            },
            "size": 2,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_not_equal.ImplicitArgs": {
            "full_name": "starkware.cairo.common.math.assert_not_equal.ImplicitArgs",
            "members": {},
            "size": 0,
            "type": "struct"
        },
        "starkware.cairo.common.math.assert_not_equal.Return": {
            "cairo_type": "()",
            "type": "type_definition"
        },
        "starkware.cairo.common.math.assert_not_equal.SIZEOF_LOCALS": {
            "type": "const",
            "value": 0
        },
        "starkware.cairo.common.math.assert_not_equal.__temp0": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_not_equal.__temp0",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 1
                    },
                    "pc": 7,
                    "value": "[cast(ap + (-1), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_not_equal.a": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_not_equal.a",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 6,
                    "value": "[cast(fp + (-4), felt*)]"
                }
            ],
            "type": "reference"
        },
        "starkware.cairo.common.math.assert_not_equal.b": {
            "cairo_type": "felt",
            "full_name": "starkware.cairo.common.math.assert_not_equal.b",
            "references": [
                {
                    "ap_tracking_data": {
                        "group": 2,
                        "offset": 0
                    },
                    "pc": 6,
                    "value": "[cast(fp + (-3), felt*)]"
                }
            ],
            "type": "reference"
        }
    },
    "main_scope": "__main__",
    "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
    "reference_manager": {
        "references": [
            {
                "ap_tracking_data": {
                    "group": 2,
                    "offset": 0
                },
                "pc": 6,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 2,
                    "offset": 0
                },
                "pc": 6,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 2,
                    "offset": 1
                },
                "pc": 7,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 4,
                    "offset": 0
                },
                "pc": 15,
                "value": "[cast(fp + (-6), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 4,
                    "offset": 0
                },
                "pc": 15,
                "value": "[cast(fp + (-5), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 4,
                    "offset": 0
                },
                "pc": 15,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 4,
                    "offset": 0
                },
                "pc": 15,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 4,
                    "offset": 1
                },
                "pc": 16,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 4,
                    "offset": 2
                },
                "pc": 20,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 4,
                    "offset": 3
                },
                "pc": 21,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 0
                },
                "pc": 33,
                "value": "[cast(fp + (-7), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 0
                },
                "pc": 33,
                "value": "[cast(fp + (-6), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 0
                },
                "pc": 33,
                "value": "[cast(fp + (-5), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 0
                },
                "pc": 33,
                "value": "[cast(fp + (-4), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 0
                },
                "pc": 33,
                "value": "[cast(fp + (-3), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 1
                },
                "pc": 34,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 2
                },
                "pc": 38,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 3
                },
                "pc": 39,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 6,
                    "offset": 4
                },
                "pc": 40,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 8,
                    "offset": 4
                },
                "pc": 54,
                "value": "[cast(ap + (-1), felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 8,
                    "offset": 4
                },
                "pc": 55,
                "value": "[cast(fp, felt*)]"
            },
            {
                "ap_tracking_data": {
                    "group": 8,
                    "offset": 7
                },
                "pc": 57,
                "value": "[cast(ap + (-1), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 8,
                    "offset": 7
                },
                "pc": 58,
                "value": "[cast(fp + 1, felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 8,
                    "offset": 10
                },
                "pc": 60,
                "value": "[cast(ap + (-1), felt**)]"
            },
            {
                "ap_tracking_data": {
                    "group": 8,
                    "offset": 10
                },
                "pc": 61,
                "value": "[cast(fp + 2, felt**)]"
            }
        ]
    }
}
