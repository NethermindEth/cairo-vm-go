package utils

import (
	"testing"
)

func TestComputeMessageSchedule(t *testing.T) {
	input := []uint32{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}

	result, err := ComputeMessageSchedule(input)
	if err != nil {
		t.Errorf("ComputeMessageSchedule failed %d, %d", err, result)
	}

	expectedResult := []uint32{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 67559435, 101367821, 3020350282, 1107812741, 3118632270, 451168464, 656601990, 3279804240, 1103585248, 461130233, 2653371037, 2175483678, 2971844087, 1030991300, 3974839675, 2477209260, 3279611694, 1561569730, 1603939653, 3189046280, 4224804089, 2646992545, 635753112, 4125081555, 1964552335, 2309306792, 2373507743, 259776332, 701344636, 482288624, 3399445588, 2053317424, 236667340, 3934934314, 1907271339, 4255195815, 3378026140, 502208176, 1352423260, 2851041892, 256006704, 1790616609, 1603953582, 1998049493, 4039401960, 3952946654, 3640193746, 113257106}

	for i := 0; i < len(result); i++ {
		if result[i] != expectedResult[i] {
			t.Errorf("Expected result = %08X, got %08X", result[i], expectedResult[i])
		}
	}
}

func TestSha256Compress(t *testing.T) {
	w := []uint32{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 67559435, 101367821, 3020350282, 1107812741, 3118632270, 451168464, 656601990, 3279804240, 1103585248, 461130233, 2653371037, 2175483678, 2971844087, 1030991300, 3974839675, 2477209260, 3279611694, 1561569730, 1603939653, 3189046280, 4224804089, 2646992545, 635753112, 4125081555, 1964552335, 2309306792, 2373507743, 259776332, 701344636, 482288624, 3399445588, 2053317424, 236667340, 3934934314, 1907271339, 4255195815, 3378026140, 502208176, 1352423260, 2851041892, 256006704, 1790616609, 1603953582, 1998049493, 4039401960, 3952946654, 3640193746, 113257106}
	state := [8]uint32{1, 2, 3, 4, 5, 6, 7, 8}

	sha256Result := Sha256Compress(state, w)

	expectedResult := []uint32{1862536192, 526086805, 2067405084, 593147560, 726610467, 813867028, 4091010797, 3974542186}

	for i := 0; i < len(sha256Result); i++ {
		if sha256Result[i] != expectedResult[i] {
			t.Errorf("Expected result = %d, got %d", sha256Result[i], expectedResult[i])
		}
	}

}
